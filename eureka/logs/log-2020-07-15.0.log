[ INFO ] [2020-07-15 16:01:31] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6cb05c: startup date [Wed Jul 15 16:01:31 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:01:32] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:01:32] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:01:32] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c22c230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:01:33] io.twostepsfromjava.cloud.service.discovery.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:01:33] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76884e4b: startup date [Wed Jul 15 16:01:33 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6cb05c
[ INFO ] [2020-07-15 16:01:39] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=4705e7af-8d56-377d-94aa-a98ef3398c92
[ INFO ] [2020-07-15 16:01:39] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:01:40] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$82356574] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:01:40] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c22c230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:01:41] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8260 (http)
[ INFO ] [2020-07-15 16:01:41] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:01:41] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:01:42] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:01:42] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 8540 ms
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean [258] - Mapping filter: 'springSecurityFilterChain' to: [/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestTraceFilter' to: [/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.FilterRegistrationBean [271] - Mapping filter: 'servletContainer' to urls: [/eureka/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2020-07-15 16:01:44] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:01:45] com.sun.jersey.server.impl.application.WebApplicationImpl [815] - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
[ INFO ] [2020-07-15 16:01:45] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:01:45] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:01:46] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:01:46] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76884e4b: startup date [Wed Jul 15 16:01:33 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6cb05c
[ INFO ] [2020-07-15 16:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
[ INFO ] [2020-07-15 16:01:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
[ INFO ] [2020-07-15 16:01:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:01:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:01:50] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:01:51] org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration [173] - 

Using default security password: ec76eb09-b7e9-4f96-b065-762c51b73b7a

[ INFO ] [2020-07-15 16:01:51] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
[ INFO ] [2020-07-15 16:01:52] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@3458eca5, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e0fdb2f, org.springframework.security.web.context.SecurityContextPersistenceFilter@1192b58e, org.springframework.security.web.header.HeaderWriterFilter@5a49af50, org.springframework.security.web.authentication.logout.LogoutFilter@47e51549, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@77dba4cd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f631ca0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@463561c5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c380bd8, org.springframework.security.web.session.SessionManagementFilter@7fc420b8, org.springframework.security.web.access.ExceptionTranslationFilter@4833eff3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fc5563d]
[ INFO ] [2020-07-15 16:01:52] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@205df5dc, org.springframework.security.web.context.SecurityContextPersistenceFilter@3451f01d, org.springframework.security.web.header.HeaderWriterFilter@76130a29, org.springframework.security.web.authentication.logout.LogoutFilter@66deec87, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d342959, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72503b19, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cfc2538, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6aa7b67f, org.springframework.security.web.session.SessionManagementFilter@124d02b2, org.springframework.security.web.access.ExceptionTranslationFilter@7f973a14, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2721044]
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2020-07-15 16:01:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:01:53] org.springframework.ui.freemarker.SpringTemplateLoader [61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76884e4b: startup date [Wed Jul 15 16:01:33 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6cb05c] and template loader path [classpath:/templates/]
[ INFO ] [2020-07-15 16:01:53] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ WARN ] [2020-07-15 16:01:53] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:01:53] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:01:53] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:01:53] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:01:54] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:01:54] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:01:54] com.netflix.discovery.DiscoveryClient [347] - Client configured to neither register nor query for data.
[ INFO ] [2020-07-15 16:01:54] com.netflix.discovery.DiscoveryClient [361] - Discovery Client initialized at timestamp 1594800114451 with initial instances count: 0
[ INFO ] [2020-07-15 16:01:54] com.netflix.eureka.DefaultEurekaServerContext [63] - Initializing ...
[ WARN ] [2020-07-15 16:01:54] com.netflix.eureka.cluster.PeerEurekaNodes [156] - The replica size seems to be empty. Check the route 53 DNS Registry
[ INFO ] [2020-07-15 16:01:54] com.netflix.eureka.registry.AbstractInstanceRegistry [152] - Finished initializing remote region registries. All known remote regions: []
[ INFO ] [2020-07-15 16:01:54] com.netflix.eureka.DefaultEurekaServerContext [66] - Initialized
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=76884e4b,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:01:54] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2020-07-15 16:01:54] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:01:55] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:01:55] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application service-discovery with eureka with status UP
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2020-07-15 16:01:55] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [107] - Setting the eureka configuration..
[ INFO ] [2020-07-15 16:01:55] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [112] - Eureka data center value eureka.datacenter is not set, defaulting to default
[ INFO ] [2020-07-15 16:01:55] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [126] - Eureka environment value eureka.environment is not set, defaulting to test
[ INFO ] [2020-07-15 16:01:55] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [182] - isAws returned false
[ INFO ] [2020-07-15 16:01:55] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [150] - Initialized server context
[ INFO ] [2020-07-15 16:01:55] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [242] - Got 1 instances from neighboring DS node
[ INFO ] [2020-07-15 16:01:55] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [243] - Renew threshold is: 1
[ INFO ] [2020-07-15 16:01:55] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [254] - Changing status to UP
[ INFO ] [2020-07-15 16:01:55] org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration [71] - Started Eureka Server
[ INFO ] [2020-07-15 16:01:55] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8260"]
[ INFO ] [2020-07-15 16:01:55] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8260]
[ INFO ] [2020-07-15 16:01:55] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2020-07-15 16:01:55] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 8260 (http)
[ INFO ] [2020-07-15 16:01:55] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8260
[ INFO ] [2020-07-15 16:01:55] io.twostepsfromjava.cloud.service.discovery.Application [57] - Started Application in 26.567 seconds (JVM running for 37.425)
[ INFO ] [2020-07-15 16:01:56] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2020-07-15 16:01:56] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2020-07-15 16:01:56] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 129 ms
[ INFO ] [2020-07-15 16:02:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 0ms
[ INFO ] [2020-07-15 16:03:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 3ms
[ INFO ] [2020-07-15 16:04:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:05:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:06:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:07:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:08:53] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@145f66e3: startup date [Wed Jul 15 16:08:53 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:08:54] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:08:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$22b68a16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:08:54] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:08:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 38ms
[ INFO ] [2020-07-15 16:08:56] io.twostepsfromjava.cloud.consumer.hello.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:08:56] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1d6571: startup date [Wed Jul 15 16:08:56 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@145f66e3
[ INFO ] [2020-07-15 16:08:58] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=fe937655-aa08-359c-b6dd-39e1e807ccb6
[ INFO ] [2020-07-15 16:08:58] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:08:58] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$22b68a16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:08:58] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8080 (http)
[ INFO ] [2020-07-15 16:08:58] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:08:58] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:08:58] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:08:58] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 2101 ms
[ INFO ] [2020-07-15 16:08:59] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:08:59] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:08:59] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:08:59] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:08:59] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:08:59] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1d6571: startup date [Wed Jul 15 16:08:56 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@145f66e3
[ INFO ] [2020-07-15 16:08:59] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/hello],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.hello()
[ INFO ] [2020-07-15 16:08:59] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/helloEx],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.helloEx()
[ INFO ] [2020-07-15 16:08:59] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:08:59] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:08:59] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:08:59] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:09:00] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2020-07-15 16:09:00] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:09:00] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:09:00] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:09:00] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:09:00] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:09:00] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:09:00] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:09:00] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:09:00] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:09:00] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:09:00] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4b1d6571,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:09:00] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:09:00] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:09:00] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:09:01] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:09:01] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:09:02] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:09:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8080 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:408)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:266)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:262)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:60)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:228)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$2a1f8335.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$2a1f8335$$FastClassBySpringCGLIB$$39299fe3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$2a1f8335.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:133)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:122)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:73)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:879)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.consumer.hello.Application.main(Application.java:48)
[ WARN ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [287] - Using default backup registry implementation which does not do anything.
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1594800543082 with initial instances count: 0
[ INFO ] [2020-07-15 16:09:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application consumer-hello with eureka with status UP
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1594800543104, current=UP, previous=STARTING]
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8080: registering service...
[ INFO ] [2020-07-15 16:09:03] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8080"]
[ INFO ] [2020-07-15 16:09:03] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8080]
[ ERROR] [2020-07-15 16:09:03] org.apache.coyote.http11.Http11NioProtocol [181] - Failed to start end point associated with ProtocolHandler [http-nio-8080]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.consumer.hello.Application.main(Application.java:48)
[ ERROR] [2020-07-15 16:09:03] org.apache.catalina.core.StandardService [181] - Failed to start connector [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.consumer.hello.Application.main(Application.java:48)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1000)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993)
	... 14 common frames omitted
[ INFO ] [2020-07-15 16:09:03] org.apache.coyote.http11.Http11NioProtocol [179] - Pausing ProtocolHandler ["http-nio-8080"]
[ INFO ] [2020-07-15 16:09:03] org.apache.catalina.core.StandardService [179] - Stopping service Tomcat
[ INFO ] [2020-07-15 16:09:03] org.apache.catalina.util.LifecycleBase [179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
[ INFO ] [2020-07-15 16:09:03] org.apache.coyote.http11.Http11NioProtocol [179] - Stopping ProtocolHandler ["http-nio-8080"]
[ INFO ] [2020-07-15 16:09:03] org.apache.coyote.http11.Http11NioProtocol [179] - Destroying ProtocolHandler ["http-nio-8080"]
[ INFO ] [2020-07-15 16:09:03] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ WARN ] [2020-07-15 16:09:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:09:03] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ ERROR] [2020-07-15 16:09:03] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [42] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

[ INFO ] [2020-07-15 16:09:03] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [987] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1d6571: startup date [Wed Jul 15 16:08:56 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@145f66e3
[ INFO ] [2020-07-15 16:09:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [64] - Unregistering application consumer-hello with eureka with status DOWN
[ WARN ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [1277] - Saw local status change event StatusChangeEvent [timestamp=1594800543354, current=DOWN, previous=UP]
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [884] - Unregistering ...
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [886] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8080 - deregister  status: 401
[ INFO ] [2020-07-15 16:09:03] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ INFO ] [2020-07-15 16:09:03] org.springframework.context.support.DefaultLifecycleProcessor [358] - Stopping beans in phase 0
[ INFO ] [2020-07-15 16:09:03] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [449] - Unregistering JMX-exposed beans on shutdown
[ INFO ] [2020-07-15 16:09:03] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [241] - Unregistering JMX-exposed beans
[ INFO ] [2020-07-15 16:09:39] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74: startup date [Wed Jul 15 16:09:39 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:09:40] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:09:40] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:09:40] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:09:40] io.twostepsfromjava.cloud.consumer.hello.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:09:40] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a12c404: startup date [Wed Jul 15 16:09:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:09:41] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=fe937655-aa08-359c-b6dd-39e1e807ccb6
[ INFO ] [2020-07-15 16:09:41] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:09:41] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:09:41] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8088 (http)
[ INFO ] [2020-07-15 16:09:41] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:09:41] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:09:42] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:09:42] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1245 ms
[ INFO ] [2020-07-15 16:09:42] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:09:42] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:09:42] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:09:42] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:09:42] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:09:43] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a12c404: startup date [Wed Jul 15 16:09:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:09:43] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/hello],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.hello()
[ INFO ] [2020-07-15 16:09:43] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/helloEx],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.helloEx()
[ INFO ] [2020-07-15 16:09:43] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:09:43] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:09:43] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:09:43] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:09:43] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2020-07-15 16:09:43] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:09:43] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:09:43] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:09:43] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:09:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:09:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:09:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:09:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:09:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:09:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:09:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3a12c404,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:09:43] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:09:43] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:09:44] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:09:45] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:408)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:266)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:262)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:60)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:228)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8$$FastClassBySpringCGLIB$$f927448b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:133)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:122)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:73)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:879)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.consumer.hello.Application.main(Application.java:48)
[ WARN ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [287] - Using default backup registry implementation which does not do anything.
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1594800585040 with initial instances count: 0
[ INFO ] [2020-07-15 16:09:45] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application consumer-hello with eureka with status UP
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1594800585064, current=UP, previous=STARTING]
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088: registering service...
[ INFO ] [2020-07-15 16:09:45] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8088"]
[ INFO ] [2020-07-15 16:09:45] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8088]
[ ERROR] [2020-07-15 16:09:45] org.apache.coyote.http11.Http11NioProtocol [181] - Failed to start end point associated with ProtocolHandler [http-nio-8088]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.consumer.hello.Application.main(Application.java:48)
[ ERROR] [2020-07-15 16:09:45] org.apache.catalina.core.StandardService [181] - Failed to start connector [Connector[HTTP/1.1-8088]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8088]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.consumer.hello.Application.main(Application.java:48)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1000)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993)
	... 14 common frames omitted
[ INFO ] [2020-07-15 16:09:45] org.apache.coyote.http11.Http11NioProtocol [179] - Pausing ProtocolHandler ["http-nio-8088"]
[ INFO ] [2020-07-15 16:09:45] org.apache.catalina.core.StandardService [179] - Stopping service Tomcat
[ INFO ] [2020-07-15 16:09:45] org.apache.catalina.util.LifecycleBase [179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
[ INFO ] [2020-07-15 16:09:45] org.apache.coyote.http11.Http11NioProtocol [179] - Stopping ProtocolHandler ["http-nio-8088"]
[ INFO ] [2020-07-15 16:09:45] org.apache.coyote.http11.Http11NioProtocol [179] - Destroying ProtocolHandler ["http-nio-8088"]
[ INFO ] [2020-07-15 16:09:45] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2020-07-15 16:09:45] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [42] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8088 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8088, or configure this application to listen on another port.

[ INFO ] [2020-07-15 16:09:45] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [987] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a12c404: startup date [Wed Jul 15 16:09:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:09:45] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [64] - Unregistering application consumer-hello with eureka with status DOWN
[ WARN ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [1277] - Saw local status change event StatusChangeEvent [timestamp=1594800585121, current=DOWN, previous=UP]
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [852] - Shutting down DiscoveryClient ...
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [884] - Unregistering ...
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [886] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - deregister  status: 401
[ WARN ] [2020-07-15 16:09:45] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ INFO ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [873] - Completed shut down of DiscoveryClient
[ WARN ] [2020-07-15 16:09:45] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:09:45] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:09:45] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:09:45] org.springframework.context.support.DefaultLifecycleProcessor [358] - Stopping beans in phase 0
[ INFO ] [2020-07-15 16:09:45] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [449] - Unregistering JMX-exposed beans on shutdown
[ INFO ] [2020-07-15 16:09:45] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [241] - Unregistering JMX-exposed beans
[ INFO ] [2020-07-15 16:09:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:10:55] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:10:59] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74: startup date [Wed Jul 15 16:10:59 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:10:59] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:10:59] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:10:59] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$461987e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:11:00] io.twostepsfromjava.cloud.consumer.hello.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:11:00] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Wed Jul 15 16:11:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:11:00] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=fe937655-aa08-359c-b6dd-39e1e807ccb6
[ INFO ] [2020-07-15 16:11:00] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:11:00] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$461987e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:11:00] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8088 (http)
[ INFO ] [2020-07-15 16:11:00] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:11:00] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:11:01] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1013 ms
[ INFO ] [2020-07-15 16:11:01] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:11:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:11:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:11:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:11:01] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Wed Jul 15 16:11:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/hello],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.hello()
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/helloEx],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.helloEx()
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:11:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2020-07-15 16:11:02] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:11:02] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:11:02] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:11:02] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:11:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:11:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:11:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:11:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:11:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:11:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:11:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=77825085,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:11:02] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:11:02] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:11:02] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:11:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:11:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:11:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:11:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:11:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:408)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:266)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:262)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:60)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:228)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$4d828108.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$4d828108$$FastClassBySpringCGLIB$$b0b3c9ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$4d828108.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:133)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:122)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:73)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:879)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.consumer.hello.Application.main(Application.java:48)
[ WARN ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [287] - Using default backup registry implementation which does not do anything.
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1594800663476 with initial instances count: 0
[ INFO ] [2020-07-15 16:11:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application consumer-hello with eureka with status UP
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1594800663497, current=UP, previous=STARTING]
[ INFO ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088: registering service...
[ INFO ] [2020-07-15 16:11:03] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8088"]
[ INFO ] [2020-07-15 16:11:03] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8088]
[ INFO ] [2020-07-15 16:11:03] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2020-07-15 16:11:03] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 8088 (http)
[ INFO ] [2020-07-15 16:11:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8088
[ INFO ] [2020-07-15 16:11:03] io.twostepsfromjava.cloud.consumer.hello.Application [57] - Started Application in 5.298 seconds (JVM running for 11.113)
[ WARN ] [2020-07-15 16:11:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:11:03] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:11:03] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:11:33] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ ERROR] [2020-07-15 16:11:33] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [83] - Request execution error
javax.ws.rs.WebApplicationException: null
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:105)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:11:33] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [129] - Request execution failed with message: null
[ ERROR] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [824] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088: registering service...
[ WARN ] [2020-07-15 16:11:33] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:11:33] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:11:33] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:12:14] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@40a4337a: startup date [Wed Jul 15 16:12:14 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:12:15] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:12:15] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:12:15] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c2180df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:12:16] io.twostepsfromjava.cloud.service.discovery.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:12:16] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@126945f9: startup date [Wed Jul 15 16:12:16 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@40a4337a
[ INFO ] [2020-07-15 16:12:17] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=4705e7af-8d56-377d-94aa-a98ef3398c92
[ INFO ] [2020-07-15 16:12:17] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:12:17] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32342423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:12:17] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c2180df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:12:17] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8260 (http)
[ INFO ] [2020-07-15 16:12:17] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:12:17] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:12:17] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:12:17] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1741 ms
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean [258] - Mapping filter: 'springSecurityFilterChain' to: [/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestTraceFilter' to: [/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.FilterRegistrationBean [271] - Mapping filter: 'servletContainer' to urls: [/eureka/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2020-07-15 16:12:18] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:12:18] com.sun.jersey.server.impl.application.WebApplicationImpl [815] - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
[ INFO ] [2020-07-15 16:12:18] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:12:18] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:12:18] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:12:18] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:12:20] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@126945f9: startup date [Wed Jul 15 16:12:16 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@40a4337a
[ INFO ] [2020-07-15 16:12:20] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:12:20] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:12:20] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
[ INFO ] [2020-07-15 16:12:20] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
[ INFO ] [2020-07-15 16:12:20] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:12:20] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:12:20] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:12:20] org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration [173] - 

Using default security password: fc892f2f-e57d-4758-8714-ecbe29c9299f

[ INFO ] [2020-07-15 16:12:21] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
[ INFO ] [2020-07-15 16:12:21] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@1e0fdb2f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c380bd8, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f8d86e4, org.springframework.security.web.header.HeaderWriterFilter@3b1dc579, org.springframework.security.web.authentication.logout.LogoutFilter@101a461c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@34a2d6e0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1697f2b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@659feb22, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34b87182, org.springframework.security.web.session.SessionManagementFilter@31142d58, org.springframework.security.web.access.ExceptionTranslationFilter@4694f434, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@286090c]
[ INFO ] [2020-07-15 16:12:21] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6aa7b67f, org.springframework.security.web.context.SecurityContextPersistenceFilter@72503b19, org.springframework.security.web.header.HeaderWriterFilter@124d02b2, org.springframework.security.web.authentication.logout.LogoutFilter@5d342959, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2ecf5915, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cfc2538, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66deec87, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6bcc3f27, org.springframework.security.web.session.SessionManagementFilter@3451f01d, org.springframework.security.web.access.ExceptionTranslationFilter@76130a29, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@205df5dc]
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:12:21] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2020-07-15 16:12:21] org.springframework.ui.freemarker.SpringTemplateLoader [61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@126945f9: startup date [Wed Jul 15 16:12:16 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@40a4337a] and template loader path [classpath:/templates/]
[ INFO ] [2020-07-15 16:12:21] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ WARN ] [2020-07-15 16:12:21] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:12:21] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:12:21] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:12:21] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:12:21] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:12:21] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:12:21] com.netflix.discovery.DiscoveryClient [347] - Client configured to neither register nor query for data.
[ INFO ] [2020-07-15 16:12:21] com.netflix.discovery.DiscoveryClient [361] - Discovery Client initialized at timestamp 1594800741973 with initial instances count: 0
[ INFO ] [2020-07-15 16:12:22] com.netflix.eureka.DefaultEurekaServerContext [63] - Initializing ...
[ WARN ] [2020-07-15 16:12:22] com.netflix.eureka.cluster.PeerEurekaNodes [156] - The replica size seems to be empty. Check the route 53 DNS Registry
[ INFO ] [2020-07-15 16:12:22] com.netflix.eureka.registry.AbstractInstanceRegistry [152] - Finished initializing remote region registries. All known remote regions: []
[ INFO ] [2020-07-15 16:12:22] com.netflix.eureka.DefaultEurekaServerContext [66] - Initialized
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=126945f9,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:12:22] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:12:22] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:12:22] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application service-discovery with eureka with status UP
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2020-07-15 16:12:22] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [107] - Setting the eureka configuration..
[ INFO ] [2020-07-15 16:12:22] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [112] - Eureka data center value eureka.datacenter is not set, defaulting to default
[ INFO ] [2020-07-15 16:12:22] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [126] - Eureka environment value eureka.environment is not set, defaulting to test
[ INFO ] [2020-07-15 16:12:22] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [182] - isAws returned false
[ INFO ] [2020-07-15 16:12:22] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [150] - Initialized server context
[ INFO ] [2020-07-15 16:12:22] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [242] - Got 1 instances from neighboring DS node
[ INFO ] [2020-07-15 16:12:22] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [243] - Renew threshold is: 1
[ INFO ] [2020-07-15 16:12:22] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [254] - Changing status to UP
[ INFO ] [2020-07-15 16:12:22] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8260"]
[ INFO ] [2020-07-15 16:12:22] org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration [71] - Started Eureka Server
[ INFO ] [2020-07-15 16:12:22] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8260]
[ INFO ] [2020-07-15 16:12:22] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2020-07-15 16:12:22] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 8260 (http)
[ INFO ] [2020-07-15 16:12:22] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8260
[ INFO ] [2020-07-15 16:12:22] io.twostepsfromjava.cloud.service.discovery.Application [57] - Started Application in 9.268 seconds (JVM running for 15.529)
[ INFO ] [2020-07-15 16:13:22] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 0ms
[ INFO ] [2020-07-15 16:14:12] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2020-07-15 16:14:12] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2020-07-15 16:14:12] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
[ INFO ] [2020-07-15 16:14:22] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:15:22] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:16:22] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:17:22] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:18:22] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:19:04] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6cb05c: startup date [Wed Jul 15 16:19:04 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:19:04] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:19:05] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:19:05] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c22c230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:19:05] io.twostepsfromjava.cloud.service.discovery.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:19:05] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76884e4b: startup date [Wed Jul 15 16:19:05 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6cb05c
[ INFO ] [2020-07-15 16:19:07] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=4705e7af-8d56-377d-94aa-a98ef3398c92
[ INFO ] [2020-07-15 16:19:07] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:19:07] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$82356574] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:19:07] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c22c230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:19:08] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8260 (http)
[ INFO ] [2020-07-15 16:19:08] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:19:08] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:19:08] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:19:08] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 2693 ms
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean [258] - Mapping filter: 'springSecurityFilterChain' to: [/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestTraceFilter' to: [/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.FilterRegistrationBean [271] - Mapping filter: 'servletContainer' to urls: [/eureka/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2020-07-15 16:19:09] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:19:09] com.sun.jersey.server.impl.application.WebApplicationImpl [815] - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
[ INFO ] [2020-07-15 16:19:09] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:19:09] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:19:09] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:19:09] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:19:10] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76884e4b: startup date [Wed Jul 15 16:19:05 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6cb05c
[ INFO ] [2020-07-15 16:19:10] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:19:10] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:19:10] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
[ INFO ] [2020-07-15 16:19:10] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
[ INFO ] [2020-07-15 16:19:10] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:19:10] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:19:10] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:19:11] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
[ INFO ] [2020-07-15 16:19:11] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@3458eca5, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e0fdb2f, org.springframework.security.web.context.SecurityContextPersistenceFilter@1192b58e, org.springframework.security.web.header.HeaderWriterFilter@5a49af50, org.springframework.security.web.authentication.logout.LogoutFilter@47e51549, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@77dba4cd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f631ca0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@463561c5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c380bd8, org.springframework.security.web.session.SessionManagementFilter@7fc420b8, org.springframework.security.web.access.ExceptionTranslationFilter@4833eff3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fc5563d]
[ INFO ] [2020-07-15 16:19:11] org.springframework.security.web.DefaultSecurityFilterChain [43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@205df5dc, org.springframework.security.web.context.SecurityContextPersistenceFilter@3451f01d, org.springframework.security.web.header.HeaderWriterFilter@76130a29, org.springframework.security.web.authentication.logout.LogoutFilter@66deec87, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d342959, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72503b19, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cfc2538, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6aa7b67f, org.springframework.security.web.session.SessionManagementFilter@124d02b2, org.springframework.security.web.access.ExceptionTranslationFilter@7f973a14, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2721044]
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2020-07-15 16:19:11] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2020-07-15 16:19:12] org.springframework.ui.freemarker.SpringTemplateLoader [61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76884e4b: startup date [Wed Jul 15 16:19:05 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6cb05c] and template loader path [classpath:/templates/]
[ INFO ] [2020-07-15 16:19:12] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ WARN ] [2020-07-15 16:19:12] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:19:12] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:19:12] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:19:12] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:19:12] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:19:12] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:19:12] com.netflix.discovery.DiscoveryClient [347] - Client configured to neither register nor query for data.
[ INFO ] [2020-07-15 16:19:12] com.netflix.discovery.DiscoveryClient [361] - Discovery Client initialized at timestamp 1594801152318 with initial instances count: 0
[ INFO ] [2020-07-15 16:19:12] com.netflix.eureka.DefaultEurekaServerContext [63] - Initializing ...
[ WARN ] [2020-07-15 16:19:12] com.netflix.eureka.cluster.PeerEurekaNodes [156] - The replica size seems to be empty. Check the route 53 DNS Registry
[ INFO ] [2020-07-15 16:19:12] com.netflix.eureka.registry.AbstractInstanceRegistry [152] - Finished initializing remote region registries. All known remote regions: []
[ INFO ] [2020-07-15 16:19:12] com.netflix.eureka.DefaultEurekaServerContext [66] - Initialized
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=76884e4b,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:19:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:19:12] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:19:12] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application service-discovery with eureka with status UP
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2020-07-15 16:19:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2020-07-15 16:19:13] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [107] - Setting the eureka configuration..
[ INFO ] [2020-07-15 16:19:13] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [112] - Eureka data center value eureka.datacenter is not set, defaulting to default
[ INFO ] [2020-07-15 16:19:13] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [126] - Eureka environment value eureka.environment is not set, defaulting to test
[ INFO ] [2020-07-15 16:19:13] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [182] - isAws returned false
[ INFO ] [2020-07-15 16:19:13] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap [150] - Initialized server context
[ INFO ] [2020-07-15 16:19:13] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [242] - Got 1 instances from neighboring DS node
[ INFO ] [2020-07-15 16:19:13] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [243] - Renew threshold is: 1
[ INFO ] [2020-07-15 16:19:13] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [254] - Changing status to UP
[ INFO ] [2020-07-15 16:19:13] org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration [71] - Started Eureka Server
[ INFO ] [2020-07-15 16:19:13] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8260"]
[ INFO ] [2020-07-15 16:19:13] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8260]
[ INFO ] [2020-07-15 16:19:13] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2020-07-15 16:19:13] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 8260 (http)
[ INFO ] [2020-07-15 16:19:13] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8260
[ INFO ] [2020-07-15 16:19:13] io.twostepsfromjava.cloud.service.discovery.Application [57] - Started Application in 10.016 seconds (JVM running for 16.71)
[ INFO ] [2020-07-15 16:20:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 0ms
[ INFO ] [2020-07-15 16:21:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 3ms
[ INFO ] [2020-07-15 16:21:56] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2020-07-15 16:21:56] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2020-07-15 16:21:56] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
[ INFO ] [2020-07-15 16:22:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:23:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:24:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:25:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:26:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:27:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:28:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ WARN ] [2020-07-15 16:29:12] com.netflix.eureka.cluster.PeerEurekaNodes [156] - The replica size seems to be empty. Check the route 53 DNS Registry
[ INFO ] [2020-07-15 16:29:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:29:58] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74: startup date [Wed Jul 15 16:29:58 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:29:58] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:29:58] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:29:58] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:29:59] io.twostepsfromjava.cloud.service.hello.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:29:59] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71c27ee8: startup date [Wed Jul 15 16:29:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:29:59] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=4524f5d8-811b-3c4a-a304-3344efc07d85
[ INFO ] [2020-07-15 16:29:59] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:29:59] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:30:00] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 2100 (http)
[ INFO ] [2020-07-15 16:30:00] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:30:00] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:30:00] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:30:00] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1152 ms
[ INFO ] [2020-07-15 16:30:00] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:30:00] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:30:00] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:30:00] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:30:00] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:30:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71c27ee8: startup date [Wed Jul 15 16:29:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:30:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/hello],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.service.hello.api.HelloEndpoint.hello()
[ INFO ] [2020-07-15 16:30:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:30:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:30:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:30:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:30:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2020-07-15 16:30:01] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:30:01] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:30:01] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:30:01] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:30:01] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:30:01] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:30:01] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:30:01] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:30:01] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:30:01] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:30:01] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71c27ee8,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:30:01] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:30:01] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:30:01] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:30:02] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:30:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:30:03] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:408)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:266)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:262)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:60)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:228)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8$$FastClassBySpringCGLIB$$f927448b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:133)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:122)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:73)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:879)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.service.hello.Application.main(Application.java:32)
[ WARN ] [2020-07-15 16:30:03] com.netflix.discovery.DiscoveryClient [287] - Using default backup registry implementation which does not do anything.
[ INFO ] [2020-07-15 16:30:03] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2020-07-15 16:30:03] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2020-07-15 16:30:03] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1594801803039 with initial instances count: 0
[ INFO ] [2020-07-15 16:30:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application SERVICE-HELLO with eureka with status UP
[ INFO ] [2020-07-15 16:30:03] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1594801803064, current=UP, previous=STARTING]
[ INFO ] [2020-07-15 16:30:03] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100: registering service...
[ INFO ] [2020-07-15 16:30:03] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-2100"]
[ INFO ] [2020-07-15 16:30:03] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-2100]
[ INFO ] [2020-07-15 16:30:03] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2020-07-15 16:30:03] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 2100 (http)
[ INFO ] [2020-07-15 16:30:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 2100
[ WARN ] [2020-07-15 16:30:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:30:03] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:30:03] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:30:03] io.twostepsfromjava.cloud.service.hello.Application [57] - Started Application in 6.264 seconds (JVM running for 12.247)
[ INFO ] [2020-07-15 16:30:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:30:33] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ ERROR] [2020-07-15 16:30:33] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [83] - Request execution error
javax.ws.rs.WebApplicationException: null
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:105)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:30:33] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [129] - Request execution failed with message: null
[ ERROR] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [824] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100: registering service...
[ WARN ] [2020-07-15 16:30:33] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:30:33] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:30:33] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:31:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ ERROR] [2020-07-15 16:31:03] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [83] - Request execution error
javax.ws.rs.WebApplicationException: null
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:105)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:31:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [129] - Request execution failed with message: null
[ ERROR] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [824] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100: registering service...
[ WARN ] [2020-07-15 16:31:03] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:31:03] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:31:03] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:31:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:31:29] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74: startup date [Wed Jul 15 16:31:29 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:31:29] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:31:30] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:31:30] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$461987e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:31:30] io.twostepsfromjava.cloud.service.hello.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:31:30] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Wed Jul 15 16:31:30 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:31:31] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=4524f5d8-811b-3c4a-a304-3344efc07d85
[ INFO ] [2020-07-15 16:31:31] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:31:31] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$461987e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:31:31] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 2100 (http)
[ INFO ] [2020-07-15 16:31:31] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:31:31] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:31:31] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:31:31] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1170 ms
[ INFO ] [2020-07-15 16:31:31] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:31:31] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:31:31] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:31:31] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:31:31] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:31:32] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Wed Jul 15 16:31:30 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:31:32] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/hello],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.service.hello.api.HelloEndpoint.hello()
[ INFO ] [2020-07-15 16:31:32] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:31:32] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:31:32] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:31:32] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:31:32] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2020-07-15 16:31:32] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:31:32] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:31:32] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:31:32] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:31:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:31:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:31:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:31:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:31:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:31:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:31:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=77825085,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:31:33] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:31:33] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:31:33] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2020-07-15 16:31:34] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2020-07-15 16:31:34] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2020-07-15 16:31:34] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2020-07-15 16:31:34] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1594801894482 with initial instances count: 0
[ INFO ] [2020-07-15 16:31:34] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application SERVICE-HELLO with eureka with status UP
[ INFO ] [2020-07-15 16:31:34] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1594801894508, current=UP, previous=STARTING]
[ INFO ] [2020-07-15 16:31:34] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100: registering service...
[ INFO ] [2020-07-15 16:31:34] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-2100"]
[ INFO ] [2020-07-15 16:31:34] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-2100]
[ INFO ] [2020-07-15 16:31:34] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2020-07-15 16:31:34] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 2100 (http)
[ INFO ] [2020-07-15 16:31:34] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 2100
[ INFO ] [2020-07-15 16:31:34] io.twostepsfromjava.cloud.service.hello.Application [57] - Started Application in 6.072 seconds (JVM running for 12.076)
[ INFO ] [2020-07-15 16:31:34] com.netflix.eureka.registry.AbstractInstanceRegistry [267] - Registered instance SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 with status UP (replication=false)
[ INFO ] [2020-07-15 16:31:34] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 - registration status: 204
[ INFO ] [2020-07-15 16:32:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:33:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:33:41] com.netflix.eureka.registry.AbstractInstanceRegistry [267] - Registered instance SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2100 with status UP (replication=false)
[ INFO ] [2020-07-15 16:34:12] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [541] - Current renewal threshold is : 3
[ INFO ] [2020-07-15 16:34:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:35:07] com.netflix.eureka.registry.AbstractInstanceRegistry [267] - Registered instance SERVICE-HELLO/SOFT07.shgae.cn:SERVICE-HELLO:2200 with status UP (replication=false)
[ INFO ] [2020-07-15 16:35:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:36:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:37:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:37:48] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74: startup date [Wed Jul 15 16:37:48 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:37:48] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:37:48] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:37:48] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:37:49] io.twostepsfromjava.cloud.consumer.hello.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:37:50] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71c27ee8: startup date [Wed Jul 15 16:37:50 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:37:50] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=fe937655-aa08-359c-b6dd-39e1e807ccb6
[ INFO ] [2020-07-15 16:37:50] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:37:50] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:37:51] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8088 (http)
[ INFO ] [2020-07-15 16:37:51] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:37:51] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:37:51] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:37:51] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1224 ms
[ INFO ] [2020-07-15 16:37:51] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:37:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:37:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:37:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:37:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:37:52] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71c27ee8: startup date [Wed Jul 15 16:37:50 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:37:52] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/hello],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.hello()
[ INFO ] [2020-07-15 16:37:52] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/helloEx],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.helloEx()
[ INFO ] [2020-07-15 16:37:52] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:37:52] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:37:52] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:37:52] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:37:52] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2020-07-15 16:37:52] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:37:52] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:37:52] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:37:52] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:37:52] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:37:52] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:37:52] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:37:52] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:37:52] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:37:52] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:37:52] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71c27ee8,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:37:52] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:37:52] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:37:53] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:37:54] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:37:54] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:408)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:266)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:262)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:60)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:228)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8$$FastClassBySpringCGLIB$$f927448b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5bbc8af8.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:133)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:122)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:73)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:879)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at io.twostepsfromjava.cloud.consumer.hello.Application.main(Application.java:48)
[ WARN ] [2020-07-15 16:37:54] com.netflix.discovery.DiscoveryClient [287] - Using default backup registry implementation which does not do anything.
[ INFO ] [2020-07-15 16:37:54] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2020-07-15 16:37:54] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2020-07-15 16:37:54] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1594802274075 with initial instances count: 0
[ INFO ] [2020-07-15 16:37:54] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application consumer-hello with eureka with status UP
[ INFO ] [2020-07-15 16:37:54] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1594802274096, current=UP, previous=STARTING]
[ INFO ] [2020-07-15 16:37:54] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088: registering service...
[ INFO ] [2020-07-15 16:37:54] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8088"]
[ INFO ] [2020-07-15 16:37:54] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8088]
[ INFO ] [2020-07-15 16:37:54] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2020-07-15 16:37:54] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 8088 (http)
[ INFO ] [2020-07-15 16:37:54] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8088
[ INFO ] [2020-07-15 16:37:54] io.twostepsfromjava.cloud.consumer.hello.Application [57] - Started Application in 6.74 seconds (JVM running for 12.627)
[ WARN ] [2020-07-15 16:37:54] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:37:54] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:37:54] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:38:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ WARN ] [2020-07-15 16:38:24] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ ERROR] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [934] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ ERROR] [2020-07-15 16:38:24] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient [83] - Request execution error
javax.ws.rs.WebApplicationException: null
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:105)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:38:24] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [129] - Request execution failed with message: null
[ ERROR] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [824] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088: registering service...
[ WARN ] [2020-07-15 16:38:24] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient [127] - Request execution failure with status code 401; retrying on another server if available
[ WARN ] [2020-07-15 16:38:24] com.netflix.discovery.DiscoveryClient [800] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ WARN ] [2020-07-15 16:38:24] com.netflix.discovery.InstanceInfoReplicator [108] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[ INFO ] [2020-07-15 16:38:36] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74: startup date [Wed Jul 15 16:38:36 CST 2020]; root of context hierarchy
[ INFO ] [2020-07-15 16:38:36] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.4.Final
[ INFO ] [2020-07-15 16:38:37] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:38:37] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$461987e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:38:38] io.twostepsfromjava.cloud.consumer.hello.Application [637] - No active profile set, falling back to default profiles: default
[ INFO ] [2020-07-15 16:38:38] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [582] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Wed Jul 15 16:38:38 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:38:38] org.springframework.cloud.context.scope.GenericScope [263] - BeanFactory id=fe937655-aa08-359c-b6dd-39e1e807ccb6
[ INFO ] [2020-07-15 16:38:38] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:38:38] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$461987e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2020-07-15 16:38:39] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 8088 (http)
[ INFO ] [2020-07-15 16:38:39] org.apache.catalina.core.StandardService [179] - Starting service Tomcat
[ INFO ] [2020-07-15 16:38:39] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.11
[ INFO ] [2020-07-15 16:38:39] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2020-07-15 16:38:39] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 1158 ms
[ INFO ] [2020-07-15 16:38:39] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2020-07-15 16:38:39] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2020-07-15 16:38:39] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2020-07-15 16:38:39] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2020-07-15 16:38:39] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2020-07-15 16:38:40] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Wed Jul 15 16:38:38 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3023df74
[ INFO ] [2020-07-15 16:38:40] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/hello],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.hello()
[ INFO ] [2020-07-15 16:38:40] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/helloEx],methods=[GET]}" onto public java.lang.String io.twostepsfromjava.cloud.consumer.hello.controller.HelloController.helloEx()
[ INFO ] [2020-07-15 16:38:40] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2020-07-15 16:38:40] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2020-07-15 16:38:40] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:38:40] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2020-07-15 16:38:40] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ WARN ] [2020-07-15 16:38:40] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:38:40] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2020-07-15 16:38:40] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2020-07-15 16:38:40] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2020-07-15 16:38:40] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2020-07-15 16:38:40] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:38:40] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:38:40] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2020-07-15 16:38:40] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2020-07-15 16:38:40] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2020-07-15 16:38:40] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=77825085,type=ConfigurationPropertiesRebinder]
[ INFO ] [2020-07-15 16:38:40] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2020-07-15 16:38:40] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [70] - Setting initial instance status as: STARTING
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.DiscoveryClient [344] - Initializing Eureka in region us-east-1
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.DiscoveryClient [920] - Disable delta property : false
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.DiscoveryClient [921] - Single vip registry refresh property : null
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.DiscoveryClient [922] - Force full registry fetch : false
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.DiscoveryClient [923] - Application is null : false
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.DiscoveryClient [924] - Registered Applications size is zero : true
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.DiscoveryClient [926] - Application version is -1: true
[ INFO ] [2020-07-15 16:38:41] com.netflix.discovery.DiscoveryClient [1009] - Getting all instance registry info from the eureka server
[ INFO ] [2020-07-15 16:38:42] com.netflix.discovery.DiscoveryClient [1018] - The response status is 200
[ INFO ] [2020-07-15 16:38:42] com.netflix.discovery.DiscoveryClient [1244] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2020-07-15 16:38:42] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2020-07-15 16:38:42] com.netflix.discovery.DiscoveryClient [425] - Discovery Client initialized at timestamp 1594802322132 with initial instances count: 2
[ INFO ] [2020-07-15 16:38:42] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application consumer-hello with eureka with status UP
[ INFO ] [2020-07-15 16:38:42] com.netflix.discovery.DiscoveryClient [1279] - Saw local status change event StatusChangeEvent [timestamp=1594802322161, current=UP, previous=STARTING]
[ INFO ] [2020-07-15 16:38:42] com.netflix.discovery.DiscoveryClient [795] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088: registering service...
[ INFO ] [2020-07-15 16:38:42] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-8088"]
[ INFO ] [2020-07-15 16:38:42] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler [http-nio-8088]
[ INFO ] [2020-07-15 16:38:42] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2020-07-15 16:38:42] com.netflix.eureka.registry.AbstractInstanceRegistry [267] - Registered instance CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 with status UP (replication=false)
[ INFO ] [2020-07-15 16:38:42] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_CONSUMER-HELLO/SOFT07.shgae.cn:consumer-hello:8088 - registration status: 204
[ INFO ] [2020-07-15 16:38:42] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [198] - Tomcat started on port(s): 8088 (http)
[ INFO ] [2020-07-15 16:38:42] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [117] - Updating port to 8088
[ INFO ] [2020-07-15 16:38:42] io.twostepsfromjava.cloud.consumer.hello.Application [57] - Started Application in 6.426 seconds (JVM running for 12.345)
[ WARN ] [2020-07-15 16:39:12] com.netflix.eureka.cluster.PeerEurekaNodes [156] - The replica size seems to be empty. Check the route 53 DNS Registry
[ INFO ] [2020-07-15 16:39:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:39:33] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2020-07-15 16:39:33] org.springframework.web.servlet.DispatcherServlet [489] - FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2020-07-15 16:39:33] org.springframework.web.servlet.DispatcherServlet [508] - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
[ INFO ] [2020-07-15 16:39:33] org.springframework.context.annotation.AnnotationConfigApplicationContext [582] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@40479f04: startup date [Wed Jul 15 16:39:33 CST 2020]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085
[ INFO ] [2020-07-15 16:39:34] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2020-07-15 16:39:34] com.netflix.config.ChainedDynamicProperty [115] - Flipping property: SERVICE-HELLO.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2020-07-15 16:39:34] com.netflix.util.concurrent.ShutdownEnabledTimer [58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-SERVICE-HELLO
[ INFO ] [2020-07-15 16:39:34] com.netflix.loadbalancer.BaseLoadBalancer [192] - Client: SERVICE-HELLO instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVICE-HELLO,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[ INFO ] [2020-07-15 16:39:34] com.netflix.loadbalancer.DynamicServerListLoadBalancer [214] - Using serverListUpdater PollingServerListUpdater
[ INFO ] [2020-07-15 16:39:34] com.netflix.config.ChainedDynamicProperty [115] - Flipping property: SERVICE-HELLO.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2020-07-15 16:39:34] com.netflix.loadbalancer.DynamicServerListLoadBalancer [150] - DynamicServerListLoadBalancer for client SERVICE-HELLO initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVICE-HELLO,current list of Servers=[SOFT07.shgae.cn:2200, SOFT07.shgae.cn:2100],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:SOFT07.shgae.cn:2100;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:SOFT07.shgae.cn:2200;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6063ba9
[ INFO ] [2020-07-15 16:39:35] com.netflix.config.ChainedDynamicProperty [115] - Flipping property: SERVICE-HELLO.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2020-07-15 16:40:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:41:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:42:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 3ms
[ INFO ] [2020-07-15 16:43:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 3ms
[ INFO ] [2020-07-15 16:43:41] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:44:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 3ms
[ INFO ] [2020-07-15 16:45:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:46:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:47:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:48:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:48:41] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ WARN ] [2020-07-15 16:49:12] com.netflix.eureka.cluster.PeerEurekaNodes [156] - The replica size seems to be empty. Check the route 53 DNS Registry
[ INFO ] [2020-07-15 16:49:12] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [541] - Current renewal threshold is : 6
[ INFO ] [2020-07-15 16:49:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:49:47] io.twostepsfromjava.cloud.consumer.hello.controller.HelloController [61] - Target service uri = http://SOFT07.shgae.cn:2200/hello. 
[ INFO ] [2020-07-15 16:49:52] io.twostepsfromjava.cloud.consumer.hello.controller.HelloController [61] - Target service uri = http://SOFT07.shgae.cn:2100/hello. 
[ INFO ] [2020-07-15 16:49:53] io.twostepsfromjava.cloud.consumer.hello.controller.HelloController [61] - Target service uri = http://SOFT07.shgae.cn:2200/hello. 
[ INFO ] [2020-07-15 16:50:09] io.twostepsfromjava.cloud.consumer.hello.controller.HelloController [61] - Target service uri = http://SOFT07.shgae.cn:2200/hello. 
[ INFO ] [2020-07-15 16:50:11] io.twostepsfromjava.cloud.consumer.hello.controller.HelloController [61] - Target service uri = http://SOFT07.shgae.cn:2100/hello. 
[ INFO ] [2020-07-15 16:50:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:51:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:52:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:53:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:53:41] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 16:54:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:55:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 5ms
[ INFO ] [2020-07-15 16:56:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:57:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 5ms
[ INFO ] [2020-07-15 16:58:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 16:58:41] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ WARN ] [2020-07-15 16:59:12] com.netflix.eureka.cluster.PeerEurekaNodes [156] - The replica size seems to be empty. Check the route 53 DNS Registry
[ INFO ] [2020-07-15 16:59:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 17:00:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 17:01:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 17:02:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 17:03:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 5ms
[ INFO ] [2020-07-15 17:03:41] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2020-07-15 17:04:12] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl [541] - Current renewal threshold is : 6
[ INFO ] [2020-07-15 17:04:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 3ms
[ INFO ] [2020-07-15 17:05:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 3ms
[ INFO ] [2020-07-15 17:06:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 3ms
[ INFO ] [2020-07-15 17:07:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 17:08:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 5ms
[ INFO ] [2020-07-15 17:08:41] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ WARN ] [2020-07-15 17:09:12] com.netflix.eureka.cluster.PeerEurekaNodes [156] - The replica size seems to be empty. Check the route 53 DNS Registry
[ INFO ] [2020-07-15 17:09:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
[ INFO ] [2020-07-15 17:10:13] com.netflix.eureka.registry.AbstractInstanceRegistry [1254] - Running the evict task with compensationTime 4ms
